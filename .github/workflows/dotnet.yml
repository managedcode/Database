name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
env:
  DOT_NET_VERSION: "7.0.x"
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}
               
      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build

  in-memory:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=IN_MEMORY
      - name: Test
        run: dotnet test --no-build

  lite-db:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=LITE_DB
      - name: Test
        run: dotnet test --no-build
        
  sqlite:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=SQLITE
      - name: Test
        run: dotnet test --no-build
    
  zone-tree:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=ZONE_TREE
      - name: Test
        run: dotnet test --no-build   
        
        
  cosmos-db:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: janpio/cosmos-emulator-github-action@main
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}
               
      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=COSMOS_DB
      - name: Test
        run: dotnet test --no-build
       
  azure-tables:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=AZURE_TABLES
      - name: Test
        run: dotnet test --no-build

  mongo-db:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=MONGO_DB
      - name: Test
        run: dotnet test --no-build
        
  dynamo-db:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOT_NET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: build
        run: dotnet build -p:DefineConstants=DYNAMO_DB
      - name: Test
        run: dotnet test --no-build




      #- name: coverlet
      #  uses: b3b00/coverlet-action@1.1.9
      #  with:
      #    testProject: 'ManagedCode.Database.Tests/ManagedCode.Database.Tests.csproj'
      #    output: 'lcov.info'
      #    outputFormat: 'lcov'
      #    excludes: '[program]*,[test]test.*'
      #- name: coveralls
      #  uses: coverallsapp/github-action@master
      #  with:
      #    github-token: ${{secrets.GITHUB_TOKEN }}
      #    path-to-lcov: ManagedCode.Storage.Tests/lcov.info
